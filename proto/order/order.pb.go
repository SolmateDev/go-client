// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: order.proto

package order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	base "github.com/SolmateDev/go-client/proto/base"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderStatus int32

const (
	OrderStatus_NEW              OrderStatus = 0
	OrderStatus_PARTIALLY_FILLED OrderStatus = 1
	OrderStatus_FILLED           OrderStatus = 2
	OrderStatus_CANCELED         OrderStatus = 3
	OrderStatus_REJECTED         OrderStatus = 4
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "NEW",
		1: "PARTIALLY_FILLED",
		2: "FILLED",
		3: "CANCELED",
		4: "REJECTED",
	}
	OrderStatus_value = map[string]int32{
		"NEW":              0,
		"PARTIALLY_FILLED": 1,
		"FILLED":           2,
		"CANCELED":         3,
		"REJECTED":         4,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[0].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[0]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

type OrderType int32

const (
	OrderType_MARKET     OrderType = 0
	OrderType_LIMIT      OrderType = 1
	OrderType_STOP       OrderType = 2
	OrderType_STOP_LIMIT OrderType = 3
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "MARKET",
		1: "LIMIT",
		2: "STOP",
		3: "STOP_LIMIT",
	}
	OrderType_value = map[string]int32{
		"MARKET":     0,
		"LIMIT":      1,
		"STOP":       2,
		"STOP_LIMIT": 3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[1].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[1]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

type TimeInForce int32

const (
	TimeInForce_DAY TimeInForce = 0
)

// Enum value maps for TimeInForce.
var (
	TimeInForce_name = map[int32]string{
		0: "DAY",
	}
	TimeInForce_value = map[string]int32{
		"DAY": 0,
	}
)

func (x TimeInForce) Enum() *TimeInForce {
	p := new(TimeInForce)
	*p = x
	return p
}

func (x TimeInForce) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeInForce) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[2].Descriptor()
}

func (TimeInForce) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[2]
}

func (x TimeInForce) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeInForce.Descriptor instead.
func (TimeInForce) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

type Side int32

const (
	Side_BUY  Side = 0
	Side_SELL Side = 1
)

// Enum value maps for Side.
var (
	Side_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	Side_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x Side) Enum() *Side {
	p := new(Side)
	*p = x
	return p
}

func (x Side) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Side) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[3].Descriptor()
}

func (Side) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[3]
}

func (x Side) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Side.Descriptor instead.
func (Side) EnumDescriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

type Market struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeInForce TimeInForce `protobuf:"varint,1,opt,name=time_in_force,json=timeInForce,proto3,enum=order.TimeInForce" json:"time_in_force,omitempty"`
}

func (x *Market) Reset() {
	*x = Market{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Market) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Market) ProtoMessage() {}

func (x *Market) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Market.ProtoReflect.Descriptor instead.
func (*Market) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *Market) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_DAY
}

type Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeInForce TimeInForce `protobuf:"varint,1,opt,name=time_in_force,json=timeInForce,proto3,enum=order.TimeInForce" json:"time_in_force,omitempty"`
	Price       int64       `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Limit) Reset() {
	*x = Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *Limit) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_DAY
}

func (x *Limit) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeInForce TimeInForce `protobuf:"varint,1,opt,name=time_in_force,json=timeInForce,proto3,enum=order.TimeInForce" json:"time_in_force,omitempty"`
	StopPrice   int64       `protobuf:"varint,2,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

func (x *Stop) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_DAY
}

func (x *Stop) GetStopPrice() int64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

type StopLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeInForce TimeInForce `protobuf:"varint,1,opt,name=time_in_force,json=timeInForce,proto3,enum=order.TimeInForce" json:"time_in_force,omitempty"`
	StopPrice   int64       `protobuf:"varint,2,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`
}

func (x *StopLimit) Reset() {
	*x = StopLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopLimit) ProtoMessage() {}

func (x *StopLimit) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopLimit.ProtoReflect.Descriptor instead.
func (*StopLimit) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

func (x *StopLimit) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_DAY
}

func (x *StopLimit) GetStopPrice() int64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

type EquityLong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityExchange string `protobuf:"bytes,1,opt,name=security_exchange,json=securityExchange,proto3" json:"security_exchange,omitempty"`
}

func (x *EquityLong) Reset() {
	*x = EquityLong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquityLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquityLong) ProtoMessage() {}

func (x *EquityLong) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquityLong.ProtoReflect.Descriptor instead.
func (*EquityLong) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

func (x *EquityLong) GetSecurityExchange() string {
	if x != nil {
		return x.SecurityExchange
	}
	return ""
}

type EquityShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityExchange string `protobuf:"bytes,1,opt,name=security_exchange,json=securityExchange,proto3" json:"security_exchange,omitempty"`
}

func (x *EquityShort) Reset() {
	*x = EquityShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquityShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquityShort) ProtoMessage() {}

func (x *EquityShort) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquityShort.ProtoReflect.Descriptor instead.
func (*EquityShort) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

func (x *EquityShort) GetSecurityExchange() string {
	if x != nil {
		return x.SecurityExchange
	}
	return ""
}

type Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// true=put, false=call
	PutOrCall    bool  `protobuf:"varint,1,opt,name=put_or_call,json=putOrCall,proto3" json:"put_or_call,omitempty"`
	MaturityDate int64 `protobuf:"varint,2,opt,name=maturity_date,json=maturityDate,proto3" json:"maturity_date,omitempty"`
	// Types that are assignable to Expire:
	//	*Option_ExpireDate
	//	*Option_ExpireTimeDate
	Expire      isOption_Expire `protobuf_oneof:"expire"`
	StrikePrice int64           `protobuf:"varint,5,opt,name=strike_price,json=strikePrice,proto3" json:"strike_price,omitempty"`
}

func (x *Option) Reset() {
	*x = Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{6}
}

func (x *Option) GetPutOrCall() bool {
	if x != nil {
		return x.PutOrCall
	}
	return false
}

func (x *Option) GetMaturityDate() int64 {
	if x != nil {
		return x.MaturityDate
	}
	return 0
}

func (m *Option) GetExpire() isOption_Expire {
	if m != nil {
		return m.Expire
	}
	return nil
}

func (x *Option) GetExpireDate() int64 {
	if x, ok := x.GetExpire().(*Option_ExpireDate); ok {
		return x.ExpireDate
	}
	return 0
}

func (x *Option) GetExpireTimeDate() int64 {
	if x, ok := x.GetExpire().(*Option_ExpireTimeDate); ok {
		return x.ExpireTimeDate
	}
	return 0
}

func (x *Option) GetStrikePrice() int64 {
	if x != nil {
		return x.StrikePrice
	}
	return 0
}

type isOption_Expire interface {
	isOption_Expire()
}

type Option_ExpireDate struct {
	ExpireDate int64 `protobuf:"varint,3,opt,name=expire_date,json=expireDate,proto3,oneof"`
}

type Option_ExpireTimeDate struct {
	ExpireTimeDate int64 `protobuf:"varint,4,opt,name=expire_time_date,json=expireTimeDate,proto3,oneof"`
}

func (*Option_ExpireDate) isOption_Expire() {}

func (*Option_ExpireTimeDate) isOption_Expire() {}

type Future struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaturityDate int64 `protobuf:"varint,1,opt,name=maturity_date,json=maturityDate,proto3" json:"maturity_date,omitempty"`
	// Types that are assignable to Expire:
	//	*Future_ExpireDate
	//	*Future_ExpireTimeDate
	Expire          isFuture_Expire `protobuf_oneof:"expire"`
	ClearingAccount string          `protobuf:"bytes,4,opt,name=clearing_account,json=clearingAccount,proto3" json:"clearing_account,omitempty"`
}

func (x *Future) Reset() {
	*x = Future{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Future) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Future) ProtoMessage() {}

func (x *Future) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Future.ProtoReflect.Descriptor instead.
func (*Future) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{7}
}

func (x *Future) GetMaturityDate() int64 {
	if x != nil {
		return x.MaturityDate
	}
	return 0
}

func (m *Future) GetExpire() isFuture_Expire {
	if m != nil {
		return m.Expire
	}
	return nil
}

func (x *Future) GetExpireDate() int64 {
	if x, ok := x.GetExpire().(*Future_ExpireDate); ok {
		return x.ExpireDate
	}
	return 0
}

func (x *Future) GetExpireTimeDate() int64 {
	if x, ok := x.GetExpire().(*Future_ExpireTimeDate); ok {
		return x.ExpireTimeDate
	}
	return 0
}

func (x *Future) GetClearingAccount() string {
	if x != nil {
		return x.ClearingAccount
	}
	return ""
}

type isFuture_Expire interface {
	isFuture_Expire()
}

type Future_ExpireDate struct {
	ExpireDate int64 `protobuf:"varint,2,opt,name=expire_date,json=expireDate,proto3,oneof"`
}

type Future_ExpireTimeDate struct {
	ExpireTimeDate int64 `protobuf:"varint,3,opt,name=expire_time_date,json=expireTimeDate,proto3,oneof"`
}

func (*Future_ExpireDate) isFuture_Expire() {}

func (*Future_ExpireTimeDate) isFuture_Expire() {}

type FxPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denominator base.Currency `protobuf:"varint,1,opt,name=denominator,proto3,enum=base.Currency" json:"denominator,omitempty"`
	Numerator   base.Currency `protobuf:"varint,2,opt,name=numerator,proto3,enum=base.Currency" json:"numerator,omitempty"`
}

func (x *FxPair) Reset() {
	*x = FxPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FxPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FxPair) ProtoMessage() {}

func (x *FxPair) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FxPair.ProtoReflect.Descriptor instead.
func (*FxPair) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{8}
}

func (x *FxPair) GetDenominator() base.Currency {
	if x != nil {
		return x.Denominator
	}
	return base.Currency(0)
}

func (x *FxPair) GetNumerator() base.Currency {
	if x != nil {
		return x.Numerator
	}
	return base.Currency(0)
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Side                Side                 `protobuf:"varint,1,opt,name=side,proto3,enum=order.Side" json:"side,omitempty"`
	Account             string               `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	ClientOrderId       string               `protobuf:"bytes,3,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	Quote               *base.ShortCommodity `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`
	Base                *base.ShortCommodity `protobuf:"bytes,5,opt,name=base,proto3" json:"base,omitempty"`
	HandlingInstitution string               `protobuf:"bytes,6,opt,name=handling_institution,json=handlingInstitution,proto3" json:"handling_institution,omitempty"`
	OrderQuantity       int64                `protobuf:"varint,7,opt,name=order_quantity,json=orderQuantity,proto3" json:"order_quantity,omitempty"`
	// Types that are assignable to OrderType:
	//	*Order_Market
	//	*Order_Limit
	//	*Order_Stop
	//	*Order_StopLimit
	OrderType    isOrder_OrderType `protobuf_oneof:"order_type"`
	Text         string            `protobuf:"bytes,12,opt,name=text,proto3" json:"text,omitempty"`
	ClearingFirm string            `protobuf:"bytes,13,opt,name=clearing_firm,json=clearingFirm,proto3" json:"clearing_firm,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{9}
}

func (x *Order) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_BUY
}

func (x *Order) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Order) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *Order) GetQuote() *base.ShortCommodity {
	if x != nil {
		return x.Quote
	}
	return nil
}

func (x *Order) GetBase() *base.ShortCommodity {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Order) GetHandlingInstitution() string {
	if x != nil {
		return x.HandlingInstitution
	}
	return ""
}

func (x *Order) GetOrderQuantity() int64 {
	if x != nil {
		return x.OrderQuantity
	}
	return 0
}

func (m *Order) GetOrderType() isOrder_OrderType {
	if m != nil {
		return m.OrderType
	}
	return nil
}

func (x *Order) GetMarket() *Market {
	if x, ok := x.GetOrderType().(*Order_Market); ok {
		return x.Market
	}
	return nil
}

func (x *Order) GetLimit() *Limit {
	if x, ok := x.GetOrderType().(*Order_Limit); ok {
		return x.Limit
	}
	return nil
}

func (x *Order) GetStop() *Stop {
	if x, ok := x.GetOrderType().(*Order_Stop); ok {
		return x.Stop
	}
	return nil
}

func (x *Order) GetStopLimit() *StopLimit {
	if x, ok := x.GetOrderType().(*Order_StopLimit); ok {
		return x.StopLimit
	}
	return nil
}

func (x *Order) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Order) GetClearingFirm() string {
	if x != nil {
		return x.ClearingFirm
	}
	return ""
}

type isOrder_OrderType interface {
	isOrder_OrderType()
}

type Order_Market struct {
	Market *Market `protobuf:"bytes,8,opt,name=market,proto3,oneof"`
}

type Order_Limit struct {
	Limit *Limit `protobuf:"bytes,9,opt,name=limit,proto3,oneof"`
}

type Order_Stop struct {
	Stop *Stop `protobuf:"bytes,10,opt,name=stop,proto3,oneof"`
}

type Order_StopLimit struct {
	StopLimit *StopLimit `protobuf:"bytes,11,opt,name=stop_limit,json=stopLimit,proto3,oneof"`
}

func (*Order_Market) isOrder_OrderType() {}

func (*Order_Limit) isOrder_OrderType() {}

func (*Order_Stop) isOrder_OrderType() {}

func (*Order_StopLimit) isOrder_OrderType() {}

type PendingNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PendingNew) Reset() {
	*x = PendingNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingNew) ProtoMessage() {}

func (x *PendingNew) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingNew.ProtoReflect.Descriptor instead.
func (*PendingNew) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{10}
}

type New struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *New) Reset() {
	*x = New{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *New) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*New) ProtoMessage() {}

func (x *New) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use New.ProtoReflect.Descriptor instead.
func (*New) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{11}
}

type PartialFill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int64 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price    int64 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *PartialFill) Reset() {
	*x = PartialFill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialFill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialFill) ProtoMessage() {}

func (x *PartialFill) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialFill.ProtoReflect.Descriptor instead.
func (*PartialFill) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{12}
}

func (x *PartialFill) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PartialFill) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type FullFill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int64 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price    int64 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *FullFill) Reset() {
	*x = FullFill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullFill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullFill) ProtoMessage() {}

func (x *FullFill) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullFill.ProtoReflect.Descriptor instead.
func (*FullFill) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{13}
}

func (x *FullFill) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *FullFill) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type DoneForDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoneForDay) Reset() {
	*x = DoneForDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneForDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneForDay) ProtoMessage() {}

func (x *DoneForDay) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneForDay.ProtoReflect.Descriptor instead.
func (*DoneForDay) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{14}
}

type Stopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Stopped) Reset() {
	*x = Stopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stopped) ProtoMessage() {}

func (x *Stopped) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stopped.ProtoReflect.Descriptor instead.
func (*Stopped) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{15}
}

type PendingCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PendingCancel) Reset() {
	*x = PendingCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingCancel) ProtoMessage() {}

func (x *PendingCancel) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingCancel.ProtoReflect.Descriptor instead.
func (*PendingCancel) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{16}
}

type PendingReplace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PendingReplace) Reset() {
	*x = PendingReplace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingReplace) ProtoMessage() {}

func (x *PendingReplace) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingReplace.ProtoReflect.Descriptor instead.
func (*PendingReplace) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{17}
}

type Canceled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Canceled) Reset() {
	*x = Canceled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canceled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canceled) ProtoMessage() {}

func (x *Canceled) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canceled.ProtoReflect.Descriptor instead.
func (*Canceled) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{18}
}

type Replaced struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOrderId string `protobuf:"bytes,1,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
}

func (x *Replaced) Reset() {
	*x = Replaced{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replaced) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replaced) ProtoMessage() {}

func (x *Replaced) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replaced.ProtoReflect.Descriptor instead.
func (*Replaced) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{19}
}

func (x *Replaced) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

type Rejected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Rejected) Reset() {
	*x = Rejected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rejected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rejected) ProtoMessage() {}

func (x *Rejected) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rejected.ProtoReflect.Descriptor instead.
func (*Rejected) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{20}
}

func (x *Rejected) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ExecutionReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from the brokerage or exchange
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// from go-manager
	ClientOrderId string `protobuf:"bytes,2,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	// Types that are assignable to ReportType:
	//	*ExecutionReport_PendingNew
	//	*ExecutionReport_New
	//	*ExecutionReport_PartialFill
	//	*ExecutionReport_FullFill
	//	*ExecutionReport_DoneForDay
	//	*ExecutionReport_Stopped
	//	*ExecutionReport_PendingCancel
	//	*ExecutionReport_PendingReplace
	//	*ExecutionReport_Canceled
	//	*ExecutionReport_Replaced
	//	*ExecutionReport_Rejected
	ReportType          isExecutionReport_ReportType `protobuf_oneof:"report_type"`
	LastShares          int64                        `protobuf:"varint,14,opt,name=last_shares,json=lastShares,proto3" json:"last_shares,omitempty"`
	LastPrice           int64                        `protobuf:"varint,15,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	CummulativeQuantity int64                        `protobuf:"varint,16,opt,name=cummulative_quantity,json=cummulativeQuantity,proto3" json:"cummulative_quantity,omitempty"`
	AveragePrice        int64                        `protobuf:"varint,17,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
	OrderQuantity       int64                        `protobuf:"varint,18,opt,name=order_quantity,json=orderQuantity,proto3" json:"order_quantity,omitempty"`
}

func (x *ExecutionReport) Reset() {
	*x = ExecutionReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionReport) ProtoMessage() {}

func (x *ExecutionReport) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionReport.ProtoReflect.Descriptor instead.
func (*ExecutionReport) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{21}
}

func (x *ExecutionReport) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ExecutionReport) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (m *ExecutionReport) GetReportType() isExecutionReport_ReportType {
	if m != nil {
		return m.ReportType
	}
	return nil
}

func (x *ExecutionReport) GetPendingNew() *PendingNew {
	if x, ok := x.GetReportType().(*ExecutionReport_PendingNew); ok {
		return x.PendingNew
	}
	return nil
}

func (x *ExecutionReport) GetNew() *New {
	if x, ok := x.GetReportType().(*ExecutionReport_New); ok {
		return x.New
	}
	return nil
}

func (x *ExecutionReport) GetPartialFill() *PartialFill {
	if x, ok := x.GetReportType().(*ExecutionReport_PartialFill); ok {
		return x.PartialFill
	}
	return nil
}

func (x *ExecutionReport) GetFullFill() *FullFill {
	if x, ok := x.GetReportType().(*ExecutionReport_FullFill); ok {
		return x.FullFill
	}
	return nil
}

func (x *ExecutionReport) GetDoneForDay() *DoneForDay {
	if x, ok := x.GetReportType().(*ExecutionReport_DoneForDay); ok {
		return x.DoneForDay
	}
	return nil
}

func (x *ExecutionReport) GetStopped() *Stopped {
	if x, ok := x.GetReportType().(*ExecutionReport_Stopped); ok {
		return x.Stopped
	}
	return nil
}

func (x *ExecutionReport) GetPendingCancel() *PendingCancel {
	if x, ok := x.GetReportType().(*ExecutionReport_PendingCancel); ok {
		return x.PendingCancel
	}
	return nil
}

func (x *ExecutionReport) GetPendingReplace() *PendingReplace {
	if x, ok := x.GetReportType().(*ExecutionReport_PendingReplace); ok {
		return x.PendingReplace
	}
	return nil
}

func (x *ExecutionReport) GetCanceled() *Canceled {
	if x, ok := x.GetReportType().(*ExecutionReport_Canceled); ok {
		return x.Canceled
	}
	return nil
}

func (x *ExecutionReport) GetReplaced() *Replaced {
	if x, ok := x.GetReportType().(*ExecutionReport_Replaced); ok {
		return x.Replaced
	}
	return nil
}

func (x *ExecutionReport) GetRejected() *Rejected {
	if x, ok := x.GetReportType().(*ExecutionReport_Rejected); ok {
		return x.Rejected
	}
	return nil
}

func (x *ExecutionReport) GetLastShares() int64 {
	if x != nil {
		return x.LastShares
	}
	return 0
}

func (x *ExecutionReport) GetLastPrice() int64 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *ExecutionReport) GetCummulativeQuantity() int64 {
	if x != nil {
		return x.CummulativeQuantity
	}
	return 0
}

func (x *ExecutionReport) GetAveragePrice() int64 {
	if x != nil {
		return x.AveragePrice
	}
	return 0
}

func (x *ExecutionReport) GetOrderQuantity() int64 {
	if x != nil {
		return x.OrderQuantity
	}
	return 0
}

type isExecutionReport_ReportType interface {
	isExecutionReport_ReportType()
}

type ExecutionReport_PendingNew struct {
	PendingNew *PendingNew `protobuf:"bytes,3,opt,name=pending_new,json=pendingNew,proto3,oneof"`
}

type ExecutionReport_New struct {
	New *New `protobuf:"bytes,4,opt,name=new,proto3,oneof"`
}

type ExecutionReport_PartialFill struct {
	PartialFill *PartialFill `protobuf:"bytes,5,opt,name=partial_fill,json=partialFill,proto3,oneof"`
}

type ExecutionReport_FullFill struct {
	FullFill *FullFill `protobuf:"bytes,6,opt,name=full_fill,json=fullFill,proto3,oneof"`
}

type ExecutionReport_DoneForDay struct {
	DoneForDay *DoneForDay `protobuf:"bytes,7,opt,name=done_for_day,json=doneForDay,proto3,oneof"`
}

type ExecutionReport_Stopped struct {
	Stopped *Stopped `protobuf:"bytes,8,opt,name=stopped,proto3,oneof"`
}

type ExecutionReport_PendingCancel struct {
	PendingCancel *PendingCancel `protobuf:"bytes,9,opt,name=pending_cancel,json=pendingCancel,proto3,oneof"`
}

type ExecutionReport_PendingReplace struct {
	PendingReplace *PendingReplace `protobuf:"bytes,10,opt,name=pending_replace,json=pendingReplace,proto3,oneof"`
}

type ExecutionReport_Canceled struct {
	Canceled *Canceled `protobuf:"bytes,11,opt,name=canceled,proto3,oneof"`
}

type ExecutionReport_Replaced struct {
	Replaced *Replaced `protobuf:"bytes,12,opt,name=replaced,proto3,oneof"`
}

type ExecutionReport_Rejected struct {
	Rejected *Rejected `protobuf:"bytes,13,opt,name=rejected,proto3,oneof"`
}

func (*ExecutionReport_PendingNew) isExecutionReport_ReportType() {}

func (*ExecutionReport_New) isExecutionReport_ReportType() {}

func (*ExecutionReport_PartialFill) isExecutionReport_ReportType() {}

func (*ExecutionReport_FullFill) isExecutionReport_ReportType() {}

func (*ExecutionReport_DoneForDay) isExecutionReport_ReportType() {}

func (*ExecutionReport_Stopped) isExecutionReport_ReportType() {}

func (*ExecutionReport_PendingCancel) isExecutionReport_ReportType() {}

func (*ExecutionReport_PendingReplace) isExecutionReport_ReportType() {}

func (*ExecutionReport_Canceled) isExecutionReport_ReportType() {}

func (*ExecutionReport_Replaced) isExecutionReport_ReportType() {}

func (*ExecutionReport_Rejected) isExecutionReport_ReportType() {}

type OrderCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account               string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	ClientOrderId         string `protobuf:"bytes,2,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	OriginalClientOrderId string `protobuf:"bytes,3,opt,name=original_client_order_id,json=originalClientOrderId,proto3" json:"original_client_order_id,omitempty"`
}

func (x *OrderCancelRequest) Reset() {
	*x = OrderCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancelRequest) ProtoMessage() {}

func (x *OrderCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancelRequest.ProtoReflect.Descriptor instead.
func (*OrderCancelRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{22}
}

func (x *OrderCancelRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *OrderCancelRequest) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *OrderCancelRequest) GetOriginalClientOrderId() string {
	if x != nil {
		return x.OriginalClientOrderId
	}
	return ""
}

type CancelReject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId               string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ClientOrderId         string `protobuf:"bytes,2,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	OriginalClientOrderId string `protobuf:"bytes,3,opt,name=original_client_order_id,json=originalClientOrderId,proto3" json:"original_client_order_id,omitempty"`
	Reason                string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CancelReject) Reset() {
	*x = CancelReject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReject) ProtoMessage() {}

func (x *CancelReject) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelReject.ProtoReflect.Descriptor instead.
func (*CancelReject) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{23}
}

func (x *CancelReject) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CancelReject) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *CancelReject) GetOriginalClientOrderId() string {
	if x != nil {
		return x.OriginalClientOrderId
	}
	return ""
}

func (x *CancelReject) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type OrderStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOrderId string `protobuf:"bytes,1,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
}

func (x *OrderStatusRequest) Reset() {
	*x = OrderStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderStatusRequest) ProtoMessage() {}

func (x *OrderStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderStatusRequest.ProtoReflect.Descriptor instead.
func (*OrderStatusRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{24}
}

func (x *OrderStatusRequest) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x40, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x22, 0x55, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x04, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x36, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x62, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x0a,
	0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x0b, 0x45, 0x71, 0x75, 0x69, 0x74,
	0x79, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0b, 0x70, 0x75, 0x74, 0x5f, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x75, 0x74, 0x4f, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22,
	0xb1, 0x01, 0x0a, 0x06, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x22, 0x68, 0x0a, 0x06, 0x46, 0x78, 0x50, 0x61, 0x69, 0x72, 0x12, 0x30, 0x0a,
	0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x8a, 0x04,
	0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27,
	0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a,
	0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70,
	0x12, 0x31, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x72, 0x6d, 0x42, 0x0c, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x77, 0x22, 0x05, 0x0a, 0x03, 0x4e, 0x65, 0x77, 0x22,
	0x3f, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x3c, 0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x0c,
	0x0a, 0x0a, 0x44, 0x6f, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x44, 0x61, 0x79, 0x22, 0x09, 0x0a, 0x07,
	0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x08, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xd2,
	0x06, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x6e, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x77, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x03, 0x6e,
	0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4e, 0x65, 0x77, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12, 0x37, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x6c, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x6c,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x46, 0x75, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c,
	0x46, 0x69, 0x6c, 0x6c, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x44, 0x61, 0x79, 0x48, 0x00, 0x52,
	0x0a, 0x64, 0x6f, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x44, 0x61, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x75, 0x6d, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x75, 0x6d, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x12, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x54, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x46, 0x49,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x3c,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4d,
	0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x03, 0x2a, 0x16, 0x0a, 0x0b,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x44,
	0x41, 0x59, 0x10, 0x00, 0x2a, 0x19, 0x0a, 0x04, 0x53, 0x69, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x55, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x01, 0x42,
	0x1e, 0x5a, 0x1c, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x61, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x66, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_order_proto_goTypes = []interface{}{
	(OrderStatus)(0),            // 0: order.OrderStatus
	(OrderType)(0),              // 1: order.OrderType
	(TimeInForce)(0),            // 2: order.TimeInForce
	(Side)(0),                   // 3: order.Side
	(*Market)(nil),              // 4: order.Market
	(*Limit)(nil),               // 5: order.Limit
	(*Stop)(nil),                // 6: order.Stop
	(*StopLimit)(nil),           // 7: order.StopLimit
	(*EquityLong)(nil),          // 8: order.EquityLong
	(*EquityShort)(nil),         // 9: order.EquityShort
	(*Option)(nil),              // 10: order.Option
	(*Future)(nil),              // 11: order.Future
	(*FxPair)(nil),              // 12: order.FxPair
	(*Order)(nil),               // 13: order.Order
	(*PendingNew)(nil),          // 14: order.PendingNew
	(*New)(nil),                 // 15: order.New
	(*PartialFill)(nil),         // 16: order.PartialFill
	(*FullFill)(nil),            // 17: order.FullFill
	(*DoneForDay)(nil),          // 18: order.DoneForDay
	(*Stopped)(nil),             // 19: order.Stopped
	(*PendingCancel)(nil),       // 20: order.PendingCancel
	(*PendingReplace)(nil),      // 21: order.PendingReplace
	(*Canceled)(nil),            // 22: order.Canceled
	(*Replaced)(nil),            // 23: order.Replaced
	(*Rejected)(nil),            // 24: order.Rejected
	(*ExecutionReport)(nil),     // 25: order.ExecutionReport
	(*OrderCancelRequest)(nil),  // 26: order.OrderCancelRequest
	(*CancelReject)(nil),        // 27: order.CancelReject
	(*OrderStatusRequest)(nil),  // 28: order.OrderStatusRequest
	(base.Currency)(0),          // 29: base.Currency
	(*base.ShortCommodity)(nil), // 30: base.ShortCommodity
}
var file_order_proto_depIdxs = []int32{
	2,  // 0: order.Market.time_in_force:type_name -> order.TimeInForce
	2,  // 1: order.Limit.time_in_force:type_name -> order.TimeInForce
	2,  // 2: order.Stop.time_in_force:type_name -> order.TimeInForce
	2,  // 3: order.StopLimit.time_in_force:type_name -> order.TimeInForce
	29, // 4: order.FxPair.denominator:type_name -> base.Currency
	29, // 5: order.FxPair.numerator:type_name -> base.Currency
	3,  // 6: order.Order.side:type_name -> order.Side
	30, // 7: order.Order.quote:type_name -> base.ShortCommodity
	30, // 8: order.Order.base:type_name -> base.ShortCommodity
	4,  // 9: order.Order.market:type_name -> order.Market
	5,  // 10: order.Order.limit:type_name -> order.Limit
	6,  // 11: order.Order.stop:type_name -> order.Stop
	7,  // 12: order.Order.stop_limit:type_name -> order.StopLimit
	14, // 13: order.ExecutionReport.pending_new:type_name -> order.PendingNew
	15, // 14: order.ExecutionReport.new:type_name -> order.New
	16, // 15: order.ExecutionReport.partial_fill:type_name -> order.PartialFill
	17, // 16: order.ExecutionReport.full_fill:type_name -> order.FullFill
	18, // 17: order.ExecutionReport.done_for_day:type_name -> order.DoneForDay
	19, // 18: order.ExecutionReport.stopped:type_name -> order.Stopped
	20, // 19: order.ExecutionReport.pending_cancel:type_name -> order.PendingCancel
	21, // 20: order.ExecutionReport.pending_replace:type_name -> order.PendingReplace
	22, // 21: order.ExecutionReport.canceled:type_name -> order.Canceled
	23, // 22: order.ExecutionReport.replaced:type_name -> order.Replaced
	24, // 23: order.ExecutionReport.rejected:type_name -> order.Rejected
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Market); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquityLong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquityShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Future); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FxPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*New); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialFill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullFill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneForDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingReplace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canceled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replaced); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rejected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelReject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_order_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Option_ExpireDate)(nil),
		(*Option_ExpireTimeDate)(nil),
	}
	file_order_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Future_ExpireDate)(nil),
		(*Future_ExpireTimeDate)(nil),
	}
	file_order_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Order_Market)(nil),
		(*Order_Limit)(nil),
		(*Order_Stop)(nil),
		(*Order_StopLimit)(nil),
	}
	file_order_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*ExecutionReport_PendingNew)(nil),
		(*ExecutionReport_New)(nil),
		(*ExecutionReport_PartialFill)(nil),
		(*ExecutionReport_FullFill)(nil),
		(*ExecutionReport_DoneForDay)(nil),
		(*ExecutionReport_Stopped)(nil),
		(*ExecutionReport_PendingCancel)(nil),
		(*ExecutionReport_PendingReplace)(nil),
		(*ExecutionReport_Canceled)(nil),
		(*ExecutionReport_Replaced)(nil),
		(*ExecutionReport_Rejected)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		EnumInfos:         file_order_proto_enumTypes,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}

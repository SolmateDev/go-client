// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.3
// source: zzzz-internal-tester.proto

package tester

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	solana "github.com/SolmateDev/go-client/proto/solana"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ValidatorEnvClient is the client API for ValidatorEnv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ValidatorEnvClient interface {
	CreatePrivateCluster(ctx context.Context, in *solana.PrivateClusterCreateRequest, opts ...grpc.CallOption) (ValidatorEnv_CreatePrivateClusterClient, error)
}

type validatorEnvClient struct {
	cc grpc.ClientConnInterface
}

func NewValidatorEnvClient(cc grpc.ClientConnInterface) ValidatorEnvClient {
	return &validatorEnvClient{cc}
}

func (c *validatorEnvClient) CreatePrivateCluster(ctx context.Context, in *solana.PrivateClusterCreateRequest, opts ...grpc.CallOption) (ValidatorEnv_CreatePrivateClusterClient, error) {
	stream, err := c.cc.NewStream(ctx, &ValidatorEnv_ServiceDesc.Streams[0], "/solanatester.ValidatorEnv/CreatePrivateCluster", opts...)
	if err != nil {
		return nil, err
	}
	x := &validatorEnvCreatePrivateClusterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ValidatorEnv_CreatePrivateClusterClient interface {
	Recv() (*solana.PrivateClusterCreateResponse, error)
	grpc.ClientStream
}

type validatorEnvCreatePrivateClusterClient struct {
	grpc.ClientStream
}

func (x *validatorEnvCreatePrivateClusterClient) Recv() (*solana.PrivateClusterCreateResponse, error) {
	m := new(solana.PrivateClusterCreateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ValidatorEnvServer is the server API for ValidatorEnv service.
// All implementations must embed UnimplementedValidatorEnvServer
// for forward compatibility
type ValidatorEnvServer interface {
	CreatePrivateCluster(*solana.PrivateClusterCreateRequest, ValidatorEnv_CreatePrivateClusterServer) error
	mustEmbedUnimplementedValidatorEnvServer()
}

// UnimplementedValidatorEnvServer must be embedded to have forward compatible implementations.
type UnimplementedValidatorEnvServer struct {
}

func (UnimplementedValidatorEnvServer) CreatePrivateCluster(*solana.PrivateClusterCreateRequest, ValidatorEnv_CreatePrivateClusterServer) error {
	return status.Errorf(codes.Unimplemented, "method CreatePrivateCluster not implemented")
}
func (UnimplementedValidatorEnvServer) mustEmbedUnimplementedValidatorEnvServer() {}

// UnsafeValidatorEnvServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ValidatorEnvServer will
// result in compilation errors.
type UnsafeValidatorEnvServer interface {
	mustEmbedUnimplementedValidatorEnvServer()
}

func RegisterValidatorEnvServer(s grpc.ServiceRegistrar, srv ValidatorEnvServer) {
	s.RegisterService(&ValidatorEnv_ServiceDesc, srv)
}

func _ValidatorEnv_CreatePrivateCluster_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(solana.PrivateClusterCreateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ValidatorEnvServer).CreatePrivateCluster(m, &validatorEnvCreatePrivateClusterServer{stream})
}

type ValidatorEnv_CreatePrivateClusterServer interface {
	Send(*solana.PrivateClusterCreateResponse) error
	grpc.ServerStream
}

type validatorEnvCreatePrivateClusterServer struct {
	grpc.ServerStream
}

func (x *validatorEnvCreatePrivateClusterServer) Send(m *solana.PrivateClusterCreateResponse) error {
	return x.ServerStream.SendMsg(m)
}

// ValidatorEnv_ServiceDesc is the grpc.ServiceDesc for ValidatorEnv service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ValidatorEnv_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "solanatester.ValidatorEnv",
	HandlerType: (*ValidatorEnvServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreatePrivateCluster",
			Handler:       _ValidatorEnv_CreatePrivateCluster_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "zzzz-internal-tester.proto",
}
